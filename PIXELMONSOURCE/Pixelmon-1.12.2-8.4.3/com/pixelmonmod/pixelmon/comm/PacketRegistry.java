package com.pixelmonmod.pixelmon.comm;

import com.pixelmonmod.pixelmon.Pixelmon;
import com.pixelmonmod.pixelmon.battles.tasks.BattleMessageTask;
import com.pixelmonmod.pixelmon.battles.tasks.EnforcedSwitchTask;
import com.pixelmonmod.pixelmon.battles.tasks.FailedSwitchFleeTask;
import com.pixelmonmod.pixelmon.battles.tasks.HPIncreaseTask;
import com.pixelmonmod.pixelmon.battles.tasks.HPUpdateTask;
import com.pixelmonmod.pixelmon.battles.tasks.IBattleTask;
import com.pixelmonmod.pixelmon.battles.tasks.RaidDropsTask;
import com.pixelmonmod.pixelmon.battles.tasks.RaidDynamaxTask;
import com.pixelmonmod.pixelmon.battles.tasks.RaidShieldsTask;
import com.pixelmonmod.pixelmon.battles.tasks.StatusUpdateTask;
import com.pixelmonmod.pixelmon.battles.tasks.SwitchOutTask;
import com.pixelmonmod.pixelmon.comm.packetHandlers.AcceptNPCTradePacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.ChooseStarter;
import com.pixelmonmod.pixelmon.comm.packetHandlers.ClearTrainerPokemon;
import com.pixelmonmod.pixelmon.comm.packetHandlers.DeleteMove;
import com.pixelmonmod.pixelmon.comm.packetHandlers.ElevatorUsed;
import com.pixelmonmod.pixelmon.comm.packetHandlers.GuiOpenClose;
import com.pixelmonmod.pixelmon.comm.packetHandlers.HealerGuiClose;
import com.pixelmonmod.pixelmon.comm.packetHandlers.HoverPacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.IlluminatePositionsPacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.KeyPacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.LensInfoPacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.LevelUp;
import com.pixelmonmod.pixelmon.comm.packetHandlers.ModifyPokestopPacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.Movement;
import com.pixelmonmod.pixelmon.comm.packetHandlers.MovementPacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.NPCTeachMove;
import com.pixelmonmod.pixelmon.comm.packetHandlers.OpenReplaceMoveScreen;
import com.pixelmonmod.pixelmon.comm.packetHandlers.OpenScreen;
import com.pixelmonmod.pixelmon.comm.packetHandlers.PixelExtrasDisplayPacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.PlayBattleParticleSystem;
import com.pixelmonmod.pixelmon.comm.packetHandlers.PlayParticleSystem;
import com.pixelmonmod.pixelmon.comm.packetHandlers.PlayerDeath;
import com.pixelmonmod.pixelmon.comm.packetHandlers.PlayerExtrasPacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.QueryResourceLocationPacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.QueryResourceLocationResult;
import com.pixelmonmod.pixelmon.comm.packetHandlers.RenamePokemon;
import com.pixelmonmod.pixelmon.comm.packetHandlers.ReplaceMove;
import com.pixelmonmod.pixelmon.comm.packetHandlers.RequestExtrasDisplayData;
import com.pixelmonmod.pixelmon.comm.packetHandlers.RequestUpdatedPokemonList;
import com.pixelmonmod.pixelmon.comm.packetHandlers.RotateEntity;
import com.pixelmonmod.pixelmon.comm.packetHandlers.SelectMovePacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.SelectPokemon;
import com.pixelmonmod.pixelmon.comm.packetHandlers.SelectPokemonListPacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.SelectStatPacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.ServerConfigList;
import com.pixelmonmod.pixelmon.comm.packetHandlers.ServerCosmeticsUpdatePacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.SetCharm;
import com.pixelmonmod.pixelmon.comm.packetHandlers.SetDisplayRibbon;
import com.pixelmonmod.pixelmon.comm.packetHandlers.SetHeldItem;
import com.pixelmonmod.pixelmon.comm.packetHandlers.SetMegaItem;
import com.pixelmonmod.pixelmon.comm.packetHandlers.StarterListPacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.StopStartLevelling;
import com.pixelmonmod.pixelmon.comm.packetHandlers.SummonParticleArcanery;
import com.pixelmonmod.pixelmon.comm.packetHandlers.SwapMove;
import com.pixelmonmod.pixelmon.comm.packetHandlers.SwitchCamera;
import com.pixelmonmod.pixelmon.comm.packetHandlers.Transform;
import com.pixelmonmod.pixelmon.comm.packetHandlers.UIKeyPressPacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.UpdatePixelmonMovementPacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.UpdateSpawner;
import com.pixelmonmod.pixelmon.comm.packetHandlers.UseRevive;
import com.pixelmonmod.pixelmon.comm.packetHandlers.badgecase.BadgeCaseActionPacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.badgecase.OpenBadgeCasePacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.AcceptDeclineBattle;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.BackToMainMenu;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.BagPacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.BattleGuiClosed;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.BattleQueryPacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.BattleSwitch;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.CheckPlayerBattle;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.ChooseAttack;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.CloseBattle;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.Dynamax;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.DynamaxMegaRule;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.EndSpectate;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.ExitBattle;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.Flee;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.FormBattleUpdate;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.MegaEvolve;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.OpenBattleMode;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.ParticipantReady;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.RemoveSpectator;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.RequestSpectate;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.SetAllBattlingPokemon;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.SetBattlingPokemon;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.SetPokemonBattleData;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.SetPokemonTeamData;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.SetStruggle;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.ShowSpectateMessage;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.StartBattle;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.StartSpectate;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.SwapPosition;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.SwitchPokemon;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.UpdateMoveset;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.UpdateTerrain;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.UpdateTurn;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.UpdateWeather;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.UseEther;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.UseItem;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.UseZMove;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.gui.GuiBattleUpdatePacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.music.PlayBattleMusic;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.rules.CancelTeamSelect;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.rules.CheckRulesVersionChoose;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.rules.CheckRulesVersionFixed;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.rules.ConfirmTeamSelect;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.rules.DisplayBattleQueryRules;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.rules.ProposeBattleRules;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.rules.RejectTeamSelect;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.rules.RequestCustomRulesUpdate;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.rules.SetProposedRules;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.rules.ShowTeamSelect;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.rules.UnconfirmTeamSelect;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.rules.UpdateBattleQueryRules;
import com.pixelmonmod.pixelmon.comm.packetHandlers.battles.rules.UpdateClientRules;
import com.pixelmonmod.pixelmon.comm.packetHandlers.camera.ItemCameraPacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.chooseMoveset.ChooseMoveset;
import com.pixelmonmod.pixelmon.comm.packetHandlers.clientStorage.ChangeLurePacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.clientStorage.UpdateClientPlayerData;
import com.pixelmonmod.pixelmon.comm.packetHandlers.clientStorage.newStorage.ClientSet;
import com.pixelmonmod.pixelmon.comm.packetHandlers.clientStorage.newStorage.ServerSwap;
import com.pixelmonmod.pixelmon.comm.packetHandlers.clientStorage.newStorage.ServerTrash;
import com.pixelmonmod.pixelmon.comm.packetHandlers.clientStorage.newStorage.pc.ClientChangeOpenPC;
import com.pixelmonmod.pixelmon.comm.packetHandlers.clientStorage.newStorage.pc.ClientInitializePC;
import com.pixelmonmod.pixelmon.comm.packetHandlers.clientStorage.newStorage.pc.ClientQueryResultsPC;
import com.pixelmonmod.pixelmon.comm.packetHandlers.clientStorage.newStorage.pc.ClientSetLastOpenBox;
import com.pixelmonmod.pixelmon.comm.packetHandlers.clientStorage.newStorage.pc.ServerQueryPC;
import com.pixelmonmod.pixelmon.comm.packetHandlers.clientStorage.newStorage.pc.ServerSetLastOpenBox;
import com.pixelmonmod.pixelmon.comm.packetHandlers.clientStorage.newStorage.pc.ServerUpdateBox;
import com.pixelmonmod.pixelmon.comm.packetHandlers.custom.drops.CustomDropsAction;
import com.pixelmonmod.pixelmon.comm.packetHandlers.custom.drops.CustomDropsOpenPacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.custom.overlays.CustomNoticePacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.custom.overlays.CustomScoreboardDisplayPacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.custom.overlays.CustomScoreboardUpdatePacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.dialogue.DialogueChoiceMade;
import com.pixelmonmod.pixelmon.comm.packetHandlers.dialogue.DialogueClosure;
import com.pixelmonmod.pixelmon.comm.packetHandlers.dialogue.DialogueInputAction;
import com.pixelmonmod.pixelmon.comm.packetHandlers.dialogue.DialogueNextAction;
import com.pixelmonmod.pixelmon.comm.packetHandlers.dialogue.OpenDialogueInput;
import com.pixelmonmod.pixelmon.comm.packetHandlers.dialogue.SetDialogueData;
import com.pixelmonmod.pixelmon.comm.packetHandlers.evolution.EvolutionResponse;
import com.pixelmonmod.pixelmon.comm.packetHandlers.evolution.EvolvePokemon;
import com.pixelmonmod.pixelmon.comm.packetHandlers.evolution.OpenEvolutionGUI;
import com.pixelmonmod.pixelmon.comm.packetHandlers.itemDrops.ItemDropPacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.itemDrops.ServerItemDropPacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.mail.MailPacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.moveskills.RegisterMoveSkillPacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.moveskills.UseMoveSkill;
import com.pixelmonmod.pixelmon.comm.packetHandlers.npc.AddTrainerPokemon;
import com.pixelmonmod.pixelmon.comm.packetHandlers.npc.CreateNPCPacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.npc.DeleteNPC;
import com.pixelmonmod.pixelmon.comm.packetHandlers.npc.DeleteNPCPacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.npc.DeleteTrainerPokemon;
import com.pixelmonmod.pixelmon.comm.packetHandlers.npc.LoadTutorData;
import com.pixelmonmod.pixelmon.comm.packetHandlers.npc.NPCServerPacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.npc.RandomiseTrainerPokemon;
import com.pixelmonmod.pixelmon.comm.packetHandlers.npc.SelectPokemonResponse;
import com.pixelmonmod.pixelmon.comm.packetHandlers.npc.SetChattingNPCTextures;
import com.pixelmonmod.pixelmon.comm.packetHandlers.npc.SetNPCData;
import com.pixelmonmod.pixelmon.comm.packetHandlers.npc.SetNPCEditData;
import com.pixelmonmod.pixelmon.comm.packetHandlers.npc.SetShopkeeperClient;
import com.pixelmonmod.pixelmon.comm.packetHandlers.npc.ShopKeeperPacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.npc.StoreTrainerData;
import com.pixelmonmod.pixelmon.comm.packetHandlers.npc.StoreTrainerPokemon;
import com.pixelmonmod.pixelmon.comm.packetHandlers.npc.StoreTutorData;
import com.pixelmonmod.pixelmon.comm.packetHandlers.npc.UpdateTrainerParty;
import com.pixelmonmod.pixelmon.comm.packetHandlers.npc.UpdateTrainerPokemon;
import com.pixelmonmod.pixelmon.comm.packetHandlers.pokedex.RequestMovesetData;
import com.pixelmonmod.pixelmon.comm.packetHandlers.pokedex.RequestSpawnData;
import com.pixelmonmod.pixelmon.comm.packetHandlers.pokedex.SendMovesetData;
import com.pixelmonmod.pixelmon.comm.packetHandlers.pokedex.SendSpawnData;
import com.pixelmonmod.pixelmon.comm.packetHandlers.pokedex.ServerPokedex;
import com.pixelmonmod.pixelmon.comm.packetHandlers.pokemoneditor.ChangePokemon;
import com.pixelmonmod.pixelmon.comm.packetHandlers.pokemoneditor.ChangePokemonOpenGUI;
import com.pixelmonmod.pixelmon.comm.packetHandlers.pokemoneditor.CheckPokemonEditorAllowed;
import com.pixelmonmod.pixelmon.comm.packetHandlers.pokemoneditor.CloseEditedPlayer;
import com.pixelmonmod.pixelmon.comm.packetHandlers.pokemoneditor.CloseEditingPlayer;
import com.pixelmonmod.pixelmon.comm.packetHandlers.pokemoneditor.DeletePokemon;
import com.pixelmonmod.pixelmon.comm.packetHandlers.pokemoneditor.RandomizePokemon;
import com.pixelmonmod.pixelmon.comm.packetHandlers.pokemoneditor.RequestCloseEditedPlayer;
import com.pixelmonmod.pixelmon.comm.packetHandlers.pokemoneditor.RequestCloseEditingPlayer;
import com.pixelmonmod.pixelmon.comm.packetHandlers.pokemoneditor.RespondPokemonEditorAllowed;
import com.pixelmonmod.pixelmon.comm.packetHandlers.pokemoneditor.SetEditedPlayer;
import com.pixelmonmod.pixelmon.comm.packetHandlers.pokemoneditor.SetEditingPlayer;
import com.pixelmonmod.pixelmon.comm.packetHandlers.pokemoneditor.SetImportPokemonID;
import com.pixelmonmod.pixelmon.comm.packetHandlers.pokemoneditor.UpdatePlayerParty;
import com.pixelmonmod.pixelmon.comm.packetHandlers.pokemoneditor.UpdatePlayerPokemon;
import com.pixelmonmod.pixelmon.comm.packetHandlers.pokemoneditor.UpdateSinglePokemon;
import com.pixelmonmod.pixelmon.comm.packetHandlers.raids.CloseRaid;
import com.pixelmonmod.pixelmon.comm.packetHandlers.raids.OpenRaid;
import com.pixelmonmod.pixelmon.comm.packetHandlers.raids.RaidAction;
import com.pixelmonmod.pixelmon.comm.packetHandlers.raids.UpdateRaidCatch;
import com.pixelmonmod.pixelmon.comm.packetHandlers.ranch.RanchBlockClientPacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.ranch.RanchBlockServerPacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.selection.OpenSelectionPacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.selection.SelectionResponsePacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.selection.SetSelectionOptionsPacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.statueEditor.StatuePacketClient;
import com.pixelmonmod.pixelmon.comm.packetHandlers.statueEditor.StatuePacketServer;
import com.pixelmonmod.pixelmon.comm.packetHandlers.trading.RegisterTrader;
import com.pixelmonmod.pixelmon.comm.packetHandlers.trading.ServerTrades;
import com.pixelmonmod.pixelmon.comm.packetHandlers.trading.SetClientTradePair;
import com.pixelmonmod.pixelmon.comm.packetHandlers.trading.SetSelectedStats;
import com.pixelmonmod.pixelmon.comm.packetHandlers.trading.SetTradeTarget;
import com.pixelmonmod.pixelmon.comm.packetHandlers.trading.TradeReady;
import com.pixelmonmod.pixelmon.comm.packetHandlers.trainerCard.RequestTrainerCardPacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.trainerCard.TrainerCardColorPacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.trainerCard.TrainerCardPacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.vendingMachine.SetVendingMachineData;
import com.pixelmonmod.pixelmon.comm.packetHandlers.vendingMachine.VendingMachinePacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.zygarde.ZygardeCubePacket;
import com.pixelmonmod.pixelmon.comm.packetHandlers.zygarde.ZygardeReassemblyPacket;
import com.pixelmonmod.pixelmon.quests.comm.AbandonQuest;
import com.pixelmonmod.pixelmon.quests.comm.HideDisplayQuest;
import com.pixelmonmod.pixelmon.quests.comm.ResetQuests;
import com.pixelmonmod.pixelmon.quests.comm.SendQuestData;
import com.pixelmonmod.pixelmon.quests.comm.SetDisplayQuest;
import com.pixelmonmod.pixelmon.quests.comm.editor.FetchQuestData;
import com.pixelmonmod.pixelmon.quests.comm.editor.PullQuestData;
import com.pixelmonmod.pixelmon.quests.comm.editor.PushQuestData;
import com.pixelmonmod.pixelmon.quests.comm.editor.ReloadQuestData;
import java.util.Map;
import javax.annotation.Nullable;
import net.minecraftforge.fml.common.Loader;
import net.minecraftforge.fml.common.ModContainer;
import net.minecraftforge.fml.common.network.NetworkRegistry;
import net.minecraftforge.fml.common.network.internal.NetworkModHolder;
import net.minecraftforge.fml.relauncher.ReflectionHelper;
import net.minecraftforge.fml.relauncher.Side;

public class PacketRegistry {
   private static int id = 0;

   public static void registerPackets() {
      Pixelmon.network.registerMessage(AcceptNPCTradePacket.Handler.class, AcceptNPCTradePacket.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(BagPacket.Handler.class, BagPacket.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(BattleGuiClosed.Handler.class, BattleGuiClosed.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(ChooseAttack.Handler.class, ChooseAttack.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(ChooseStarter.Handler.class, ChooseStarter.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(ClearTrainerPokemon.Handler.class, ClearTrainerPokemon.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(DeleteMove.Handler.class, DeleteMove.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(DisplayBattleQueryRules.Handler.class, DisplayBattleQueryRules.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(EvolutionResponse.Handler.class, EvolutionResponse.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(EvolvePokemon.Handler.class, EvolvePokemon.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(IBattleTask.HANDLER, FailedSwitchFleeTask.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(Flee.Handler.class, Flee.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(GuiOpenClose.Handler.class, GuiOpenClose.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(HoverPacket.Handler.class, HoverPacket.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(ItemDropPacket.Handler.class, ItemDropPacket.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(KeyPacket.Handler.class, KeyPacket.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(LensInfoPacket.Handler.class, LensInfoPacket.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(LevelUp.Handler.class, LevelUp.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(Movement.Handler.class, Movement.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(MovementPacket.Handler.class, MovementPacket.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(UpdatePixelmonMovementPacket.Handler.class, UpdatePixelmonMovementPacket.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(OpenEvolutionGUI.Handler.class, OpenEvolutionGUI.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(OpenReplaceMoveScreen.Handler.class, OpenReplaceMoveScreen.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(PlayerDeath.Handler.class, PlayerDeath.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(CloseBattle.Handler.class, CloseBattle.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(ProposeBattleRules.Handler.class, ProposeBattleRules.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(RenamePokemon.Handler.class, RenamePokemon.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(ReplaceMove.Handler.class, ReplaceMove.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(RequestCustomRulesUpdate.Handler.class, RequestCustomRulesUpdate.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(RequestUpdatedPokemonList.Handler.class, RequestUpdatedPokemonList.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(SelectPokemon.Handler.class, SelectPokemon.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(ServerItemDropPacket.Handler.class, ServerItemDropPacket.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(SetHeldItem.Handler.class, SetHeldItem.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(StarterListPacket.Handler.class, StarterListPacket.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(SelectPokemonListPacket.Handler.class, SelectPokemonListPacket.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(SetClientTradePair.Handler.class, SetClientTradePair.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(SetProposedRules.Handler.class, SetProposedRules.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(StopStartLevelling.Handler.class, StopStartLevelling.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(SwapMove.Handler.class, SwapMove.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(SwitchCamera.Handler.class, SwitchCamera.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(SwitchPokemon.Handler.class, SwitchPokemon.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(Transform.Handler.class, Transform.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(UpdateBattleQueryRules.Handler.class, UpdateBattleQueryRules.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(UpdateSpawner.Handler.class, UpdateSpawner.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(UseRevive.Handler.class, UseRevive.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(AcceptDeclineBattle.Handler.class, AcceptDeclineBattle.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(BackToMainMenu.Handler.class, BackToMainMenu.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(IBattleTask.HANDLER, BattleMessageTask.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(BattleQueryPacket.Handler.class, BattleQueryPacket.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(BattleSwitch.Handler.class, BattleSwitch.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(CancelTeamSelect.Handler.class, CancelTeamSelect.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(CheckPlayerBattle.Handler.class, CheckPlayerBattle.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(CheckRulesVersionChoose.Handler.class, CheckRulesVersionChoose.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(CheckRulesVersionFixed.Handler.class, CheckRulesVersionFixed.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(ConfirmTeamSelect.Handler.class, ConfirmTeamSelect.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(EndSpectate.Handler.class, EndSpectate.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(IBattleTask.HANDLER, EnforcedSwitchTask.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(ExitBattle.Handler.class, ExitBattle.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(FormBattleUpdate.Handler.class, FormBattleUpdate.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(IBattleTask.HANDLER, HPIncreaseTask.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(IBattleTask.HANDLER, RaidShieldsTask.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(IBattleTask.HANDLER, RaidDynamaxTask.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(IBattleTask.HANDLER, RaidDropsTask.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(MegaEvolve.Handler.class, MegaEvolve.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(Dynamax.Handler.class, Dynamax.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(DynamaxMegaRule.Handler.class, DynamaxMegaRule.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(UseZMove.Handler.class, UseZMove.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(OpenBattleMode.Handler.class, OpenBattleMode.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(ParticipantReady.Handler.class, ParticipantReady.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(RejectTeamSelect.Handler.class, RejectTeamSelect.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(RemoveSpectator.Handler.class, RemoveSpectator.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(RequestCustomRulesUpdate.Handler.class, RequestCustomRulesUpdate.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(RequestSpectate.Handler.class, RequestSpectate.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(SetBattlingPokemon.Handler.class, SetBattlingPokemon.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(SetAllBattlingPokemon.Handler.class, SetAllBattlingPokemon.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(SetPokemonBattleData.Handler.class, SetPokemonBattleData.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(SetPokemonTeamData.Handler.class, SetPokemonTeamData.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(SetStruggle.Handler.class, SetStruggle.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(ShowSpectateMessage.Handler.class, ShowSpectateMessage.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(ShowTeamSelect.Handler.class, ShowTeamSelect.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(StartBattle.Handler.class, StartBattle.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(StartSpectate.Handler.class, StartSpectate.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(SwapPosition.Handler.class, SwapPosition.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(UnconfirmTeamSelect.Handler.class, UnconfirmTeamSelect.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(UpdateClientRules.Handler.class, UpdateClientRules.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(UpdateMoveset.Handler.class, UpdateMoveset.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(UpdateTerrain.Handler.class, UpdateTerrain.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(UpdateTurn.Handler.class, UpdateTurn.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(UpdateWeather.Handler.class, UpdateWeather.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(UseEther.Handler.class, UseEther.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(UseItem.Handler.class, UseItem.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(IBattleTask.HANDLER, HPUpdateTask.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(IBattleTask.HANDLER, SwitchOutTask.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(IBattleTask.HANDLER, StatusUpdateTask.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(GuiBattleUpdatePacket.Handler.class, GuiBattleUpdatePacket.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(PlayBattleMusic.Handler.class, PlayBattleMusic.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(ClientInitializePC.Handler.class, ClientInitializePC.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(ClientChangeOpenPC.Handler.class, ClientChangeOpenPC.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(ClientSetLastOpenBox.Handler.class, ClientSetLastOpenBox.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(ServerQueryPC.Handler.class, ServerQueryPC.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(ClientQueryResultsPC.Handler.class, ClientQueryResultsPC.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(ServerUpdateBox.Handler.class, ServerUpdateBox.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(ServerSetLastOpenBox.Handler.class, ServerSetLastOpenBox.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(ClientSet.Handler.class, ClientSet.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(ServerSwap.Handler.class, ServerSwap.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(ServerTrash.Handler.class, ServerTrash.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(RegisterTrader.Handler.class, RegisterTrader.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(ServerTrades.Handler.class, ServerTrades.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(SetSelectedStats.Handler.class, SetSelectedStats.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(SetTradeTarget.Handler.class, SetTradeTarget.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(TradeReady.Handler.class, TradeReady.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(CreateNPCPacket.Handler.class, CreateNPCPacket.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(DeleteNPCPacket.Handler.class, DeleteNPCPacket.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(AddTrainerPokemon.Handler.class, AddTrainerPokemon.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(DeleteNPC.Handler.class, DeleteNPC.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(DeleteTrainerPokemon.Handler.class, DeleteTrainerPokemon.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(DialogueChoiceMade.Handler.class, DialogueChoiceMade.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(DialogueClosure.Handler.class, DialogueClosure.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(DialogueNextAction.Handler.class, DialogueNextAction.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(SetDialogueData.Handler.class, SetDialogueData.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(NPCTeachMove.Handler.class, NPCTeachMove.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(LoadTutorData.Handler.class, LoadTutorData.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(NPCServerPacket.Handler.class, NPCServerPacket.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(RandomiseTrainerPokemon.Handler.class, RandomiseTrainerPokemon.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(SetChattingNPCTextures.Handler.class, SetChattingNPCTextures.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(SetNPCEditData.Handler.class, SetNPCEditData.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(SetNPCData.Handler.class, SetNPCData.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(SetShopkeeperClient.Handler.class, SetShopkeeperClient.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(StoreTrainerData.Handler.class, StoreTrainerData.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(StoreTutorData.Handler.class, StoreTutorData.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(StoreTrainerPokemon.Handler.class, StoreTrainerPokemon.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(UpdateTrainerParty.Handler.class, UpdateTrainerParty.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(UpdateTrainerPokemon.Handler.class, UpdateTrainerPokemon.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(ShopKeeperPacket.Handler.class, ShopKeeperPacket.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(SelectPokemonResponse.Handler.class, SelectPokemonResponse.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(ServerPokedex.Handler.class, ServerPokedex.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(ClientUpdatePokedex.Handler.class, ClientUpdatePokedex.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(RequestSpawnData.Handler.class, RequestSpawnData.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(SendSpawnData.Handler.class, SendSpawnData.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(RequestMovesetData.Handler.class, RequestMovesetData.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(SendMovesetData.Handler.class, SendMovesetData.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(ChooseMoveset.Handler.class, ChooseMoveset.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(MailPacket.Handler.class, MailPacket.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(RequestTrainerCardPacket.Handler.class, RequestTrainerCardPacket.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(TrainerCardPacket.Handler.class, TrainerCardPacket.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(TrainerCardColorPacket.Handler.class, TrainerCardColorPacket.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(RanchBlockClientPacket.Handler.class, RanchBlockClientPacket.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(RanchBlockServerPacket.Handler.class, RanchBlockServerPacket.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(StatuePacketClient.Handler.class, StatuePacketClient.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(StatuePacketServer.Handler.class, StatuePacketServer.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(SetVendingMachineData.Handler.class, SetVendingMachineData.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(VendingMachinePacket.Handler.class, VendingMachinePacket.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(RegisterMoveSkillPacket.Handler.class, RegisterMoveSkillPacket.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(UseMoveSkill.Handler.class, UseMoveSkill.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(IlluminatePositionsPacket.Handler.class, IlluminatePositionsPacket.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(PixelExtrasDisplayPacket.Handler.class, PixelExtrasDisplayPacket.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(PixelExtrasDisplayPacket.Handler.class, PixelExtrasDisplayPacket.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(RequestExtrasDisplayData.Handler.class, RequestExtrasDisplayData.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(ServerCosmeticsUpdatePacket.Handler.class, ServerCosmeticsUpdatePacket.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(UpdateClientPlayerData.Handler.class, UpdateClientPlayerData.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(ServerConfigList.Handler.class, ServerConfigList.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(CustomScoreboardUpdatePacket.Handler.class, CustomScoreboardUpdatePacket.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(CustomScoreboardDisplayPacket.Handler.class, CustomScoreboardDisplayPacket.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(CustomNoticePacket.Handler.class, CustomNoticePacket.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(ItemCameraPacket.Handler.class, ItemCameraPacket.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(ChangePokemon.Handler.class, ChangePokemon.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(ChangePokemonOpenGUI.Handler.class, ChangePokemonOpenGUI.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(CheckPokemonEditorAllowed.Handler.class, CheckPokemonEditorAllowed.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(CloseEditedPlayer.Handler.class, CloseEditedPlayer.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(CloseEditingPlayer.Handler.class, CloseEditingPlayer.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(DeletePokemon.Handler.class, DeletePokemon.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(RandomizePokemon.Handler.class, RandomizePokemon.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(RequestCloseEditedPlayer.Handler.class, RequestCloseEditedPlayer.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(RequestCloseEditingPlayer.Handler.class, RequestCloseEditingPlayer.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(RespondPokemonEditorAllowed.Handler.class, RespondPokemonEditorAllowed.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(SetEditedPlayer.Handler.class, SetEditedPlayer.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(SetEditingPlayer.Handler.class, SetEditingPlayer.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(SetImportPokemonID.Handler.class, SetImportPokemonID.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(UpdatePlayerParty.Handler.class, UpdatePlayerParty.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(UpdatePlayerPokemon.Handler.class, UpdatePlayerPokemon.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(UpdateSinglePokemon.Handler.class, UpdateSinglePokemon.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(PlayerExtrasPacket.Handler.class, PlayerExtrasPacket.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(SetMegaItem.Handler.class, SetMegaItem.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(RotateEntity.Handler.class, RotateEntity.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(PlayParticleSystem.Handler.class, PlayParticleSystem.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(PlayBattleParticleSystem.Handler.class, PlayBattleParticleSystem.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(SummonParticleArcanery.Handler.class, SummonParticleArcanery.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(HealerGuiClose.Handler.class, HealerGuiClose.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(ElevatorUsed.Handler.class, ElevatorUsed.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(OpenScreen.Handler.class, OpenScreen.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(SelectMovePacket.Handler.class, SelectMovePacket.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(SetCharm.Handler.class, SetCharm.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(SelectStatPacket.Handler.class, SelectStatPacket.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(ChangeLurePacket.Handler.class, ChangeLurePacket.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(ZygardeReassemblyPacket.Handler.class, ZygardeReassemblyPacket.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(ZygardeCubePacket.Handler.class, ZygardeCubePacket.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(SendQuestData.Handler.class, SendQuestData.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(AbandonQuest.Handler.class, AbandonQuest.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(ResetQuests.Handler.class, ResetQuests.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(SetDisplayQuest.Handler.class, SetDisplayQuest.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(HideDisplayQuest.Handler.class, HideDisplayQuest.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(FetchQuestData.Handler.class, FetchQuestData.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(PullQuestData.Handler.class, PullQuestData.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(PushQuestData.Handler.class, PushQuestData.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(ReloadQuestData.Handler.class, ReloadQuestData.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(CustomDropsOpenPacket.Handler.class, CustomDropsOpenPacket.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(CustomDropsAction.Handler.class, CustomDropsAction.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(OpenDialogueInput.Handler.class, OpenDialogueInput.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(DialogueInputAction.Handler.class, DialogueInputAction.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(OpenBadgeCasePacket.Handler.class, OpenBadgeCasePacket.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(BadgeCaseActionPacket.Handler.class, BadgeCaseActionPacket.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(SetDisplayRibbon.Handler.class, SetDisplayRibbon.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(ModifyPokestopPacket.Handler.class, ModifyPokestopPacket.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(OpenRaid.Handler.class, OpenRaid.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(CloseRaid.Handler.class, CloseRaid.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(UpdateRaidCatch.Handler.class, UpdateRaidCatch.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(RaidAction.Handler.class, RaidAction.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(QueryResourceLocationPacket.Handler.class, QueryResourceLocationPacket.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(QueryResourceLocationResult.Handler.class, QueryResourceLocationResult.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(UIKeyPressPacket.Handler.class, UIKeyPressPacket.class, id++, Side.SERVER);
      Pixelmon.network.registerMessage(OpenSelectionPacket.Handler.class, OpenSelectionPacket.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(SetSelectionOptionsPacket.Handler.class, SetSelectionOptionsPacket.class, id++, Side.CLIENT);
      Pixelmon.network.registerMessage(SelectionResponsePacket.Handler.class, SelectionResponsePacket.class, id++, Side.SERVER);
   }

   public static void replaceNetworkCheck() {
      ModContainer mc = Loader.instance().activeModContainer();
      NetworkModHolder mod = (NetworkModHolder)NetworkRegistry.INSTANCE.registry().get(mc);
      NetworkModHolder.NetworkChecker checker = new NetworkModHolder.NetworkChecker(mod) {
         {
            x0.getClass();
         }

         public boolean check(Map remoteVersions, Side side) {
            if (side == Side.SERVER) {
               return !remoteVersions.containsKey("pixelmon") || ((String)remoteVersions.get("pixelmon")).equals(Pixelmon.getVersion());
            } else {
               return remoteVersions.containsKey("pixelmon") && ((String)remoteVersions.get("pixelmon")).equals(Pixelmon.getVersion());
            }
         }

         @Nullable
         public String checkCompatible(Map remoteVersions, Side side) {
            if (!this.check(remoteVersions, side)) {
               String clientVersion = side == Side.CLIENT ? (String)remoteVersions.get("pixelmon") : Pixelmon.getVersion();
               String serverVersion = side == Side.SERVER ? (String)remoteVersions.get("pixelmon") : Pixelmon.getVersion();
               return clientVersion == null ? ("&cYou do not have Pixelmon installed! You need &a" + serverVersion + "&c to connect.\nPlease download the correct version for this server at&b https://pixelmonmod.com/ &cor&b https://reforged.gg/ &r").replace('&', '§') : ("&cYou are using the incorrect version of Pixelmon, you are using &a" + clientVersion + "&c, and you need &a" + serverVersion + "&c to connect.\nPlease download the correct version for this server at&b https://pixelmonmod.com/ &cor&b https://reforged.gg/ &r").replace('&', '§');
            } else {
               return null;
            }
         }

         public String toString() {
            return "Pixelmon custom network checker";
         }
      };
      ReflectionHelper.setPrivateValue(NetworkModHolder.class, mod, checker, "checker", (String)null);
   }
}
